package egservice.co.kr.admin.common;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ApiUtil {
	
	/**
	 * round_usage = 차트용 0000.00
	 * text_usage = 테이블용 1,234.00
	 * @param hashMap
	 * @return
	 */
	public static HashMap dataComma(HashMap hashMap) {
		
		HashMap returnMap = new HashMap();
		List returnList = new ArrayList();
		
		List list_usage = (List) hashMap.get("list_usage");
		
		StringUtil stringUtil = new StringUtil();
		
		for(int i=0; i<list_usage.size(); i++) {
			HashMap tempMap = (HashMap)list_usage.get(i);
			
			String round_usage = "";
			String text_usage = "";
			
			if(tempMap.get("usage") == null) {	// 값이 null 인경우 데이터를 처리하지 않음
				//System.out.println(tempMap.get("usage"));
				
				round_usage = null;
				text_usage = null;
				
			}else {
				double usage =  (double) tempMap.get("usage");
				round_usage = stringUtil.round3(String.valueOf(usage));
				text_usage = stringUtil.commaRound3(String.valueOf(usage));
			}
			
			tempMap.put("round_usage", round_usage);	//	소수점 3자리 반올림 0.00
			tempMap.put("text_usage", text_usage);
			
			//	교체
			returnList.add(tempMap);
		}
		
		returnMap.put("list_usage", returnList);
		
		return returnMap;
	}
	
	public static String isHolidayText(int num) {
		String str = "";
		
		if(1 == num) {
			str = "휴무일";
		}else if(0 == num)  {
			str = "근무일";
		}else {
			str = "-";
		}
		
		return str;
	}
	
	public static String dayOfWeekText (int num) {
		String str = "";
		
		switch (num) {
	    	case 1: 
	    		str = "일";
	    		break;
	    	case 2: 
	    		str = "월";
	    		break;
	    	case 3 :
	    		str = "화";
	    		break;
	    	case 4 : 
	    		str = "수";
	    		break;
	    	case 5 : 
	    		str = "목";
	    		break;
	    	case 6 : 
	    		str = "금";
	    		break;
	    	case 7 : 
	    		str = "토";
	    		break;
	    	
	    	case -1 :
	    		str = "";
	    		break;
		}
		
		return str;
	}
		
	public static String weatherCodeText (int num) {
		String str = "";
		
		switch (num) {
			case -1 :
				str = "";
				break;
			case 1 : 
				//str = "맑음";
				str = "<i class='far fa-sun'></i>";
				break;
			case 2 :
				//str = "흐림";
				str = "<i class='fas fa-cloud'></i>";
				break;
				
			case 3 :
				//str = "비";
				str = "<i class='fas fa-cloud-rain'></i>";
				break;
			case 4 :
				//str = "눈";
				str = "<i class='fas fa-snowflake'></i>";
				break;
		} 
		
		return str;
	}
	
	
	public static HashMap getMapWeather(HashMap weatherMap) {
		
		int isHoliday;
		int dayOfWeek;
		int weatherCode;
	
		
		if(weatherMap.containsKey("is_holiday")) {
			isHoliday = (Integer) weatherMap.get("is_holiday");	//	근무일인지 휴무일인지..
			
			weatherMap.put("text_is_holiday", isHolidayText(isHoliday));
		}
		
		if(weatherMap.containsKey("day_of_week")) {
			dayOfWeek = (Integer) weatherMap.get("day_of_week");	//	무슨 요일인지
			weatherMap.put("text_day_of_week", dayOfWeekText(dayOfWeek));
		}
		
		if(weatherMap.containsKey("weather_code")) {
			weatherCode = (Integer) weatherMap.get("weather_code");	//	날씨
			weatherMap.put("text_weather_code", weatherCodeText(weatherCode));
		}
		
		
		
		
		
		
		
		return weatherMap;
	}
	
	public static List getListWeather(List listWeather) {
		List returnList = new ArrayList();
		
		for(int i=0; i<listWeather.size(); i++) {
			HashMap weatherMap = (HashMap) listWeather.get(i);
			
			weatherMap = getMapWeather(weatherMap);
			
			returnList.add(weatherMap);
			
		}
		
		return returnList;
	} 
	
	/*	unit 1~7 -> 일 ~ 토 텍스트 추가
	 * 
	 */
	public static HashMap getListUsageWeek(HashMap map) {
		
		//	데이터 교체를 위한 맵과 리스트
		HashMap returnMap = new HashMap();
		List returnList = new ArrayList();
		
		List list = (List) map.get("list_usage");
		
		
		for(int i=0; i<list.size(); i++) {
			HashMap usageMap = (HashMap) list.get(i);
			
			
			String text_unit = dayOfWeekText((Integer)usageMap.get("unit"));
			
			usageMap.put("text_unit", text_unit);
			
			returnList.add(usageMap);
			
		}
		
		returnMap.put("list_usage", returnList);
		
		return returnMap;
	}
	
	/*	사용량, 작년대비, 온실가스 사용량  계산 */
	@SuppressWarnings("deprecation")
	public static HashMap usageCalc(HashMap dataMap) {
		//HashMap tempMap = dataMap;
		System.out.println(dataMap.toString());
		
		BigDecimal fromYear = new BigDecimal( String.valueOf(dataMap.get("total_kwh_from_year")));
		BigDecimal fromMonth = new BigDecimal( String.valueOf(dataMap.get("total_kwh_from_month")));
		BigDecimal fromDay = new BigDecimal( String.valueOf(dataMap.get("total_kwh_from_day")));
		
		BigDecimal prevYear = new BigDecimal( String.valueOf(dataMap.get("total_kwh_from_year_prev_year")));
		BigDecimal prevMonth = new BigDecimal( String.valueOf(dataMap.get("total_kwh_from_month_prev_year")));
		BigDecimal prevDay = new BigDecimal( String.valueOf(dataMap.get("total_kwh_from_day_prev_year")));
		
		BigDecimal compareYear = fromYear.subtract(prevYear);		//	작년대비 이번연도 사용량
		BigDecimal compareMonth = fromMonth.subtract(prevMonth);	//	작년대비 이번달 사용량
		BigDecimal compareDay = fromDay.subtract(prevDay).abs();	//	작년대비 오늘 사용량
		
		
		//	전년대비 비교. 0보다 크면 1, 0보다 작으면 -1, 0과 같으면 0
		int compareToDay = compareDay.compareTo(new BigDecimal("0"));
		int compareToMonth = compareMonth.compareTo(new BigDecimal("0"));
		int compareToYear = compareYear.compareTo(new BigDecimal("0"));
		
		
		//	1000
		BigDecimal unit = new BigDecimal("1000");
		
		//	온실가스
		BigDecimal gas = new BigDecimal("0.46625");
		
		BigDecimal dayGas = compareDay.multiply(gas);		//	일 온실 가스 증가량
		dayGas = dayGas.setScale(2, BigDecimal.ROUND_DOWN).abs();
		
		BigDecimal monthGas = compareMonth.multiply(gas);	//	달 온실 가스 증가량
		monthGas = monthGas.divide(unit);					//	단위 조정 ton
		monthGas = monthGas.setScale(2, BigDecimal.ROUND_DOWN).abs();
		
		BigDecimal yearGas = compareYear.multiply(gas);		//	년 온실가스
		yearGas = yearGas.divide(unit);						//	단위 조정 ton
		yearGas = yearGas.setScale(2, BigDecimal.ROUND_DOWN).abs();
		
		
		compareYear = compareYear.divide(unit); //	  작년대비 이번연도 사용량 kWh- MWh
		compareYear = compareYear.setScale(2,BigDecimal.ROUND_DOWN).abs();	// 작년대비 이번연도 사용량		
		compareMonth = compareMonth.setScale(2, BigDecimal.ROUND_DOWN).abs();//	작년대비 이번달 사용량
		compareDay = compareDay.setScale(2, BigDecimal.ROUND_DOWN).abs();	//	작년대비 오늘 사용량
		
		fromYear = fromYear.divide(unit);	//	이번년도 사용량 단위 조정 kWh- MWh
		fromYear = fromYear.setScale(2,BigDecimal.ROUND_DOWN).abs();
		fromMonth = fromMonth.setScale(2, BigDecimal.ROUND_DOWN).abs();
		fromDay = fromDay.setScale(2, BigDecimal.ROUND_DOWN).abs();		
		
		dataMap.put("compare_to_day", compareToDay);
		dataMap.put("compare_to_month", compareToMonth);
		dataMap.put("compare_to_year", compareToYear);
		
		
		dataMap.put("from_year", fromYear);
		dataMap.put("from_month", fromMonth);
		dataMap.put("from_day", fromDay);
		
		dataMap.put("compare_year", compareYear);
		dataMap.put("compare_month", compareMonth);
		dataMap.put("compare_day", compareDay);
		
		dataMap.put("day_gas", dayGas);
		dataMap.put("month_gas", monthGas);
		dataMap.put("year_gas", yearGas);
		return dataMap;
	}

	

	

}
