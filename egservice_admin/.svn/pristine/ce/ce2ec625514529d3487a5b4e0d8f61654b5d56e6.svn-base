package egservice.co.kr.admin.org.controller;

import java.util.HashMap;

import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import egservice.co.kr.admin.common.SessionUtil;

@Controller
@RequestMapping("/org/pop")
public class OrgPopBldController {

	
	@RequestMapping("/bldProc")
	public String popBldProc(@RequestParam HashMap paramMap,
			Model model, HttpSession session) throws Exception {
		System.out.println(paramMap.toString());
		
		String moveUrl = "redirect:/";
		
		if(!SessionUtil.isNull(session, "ADMIN")) {
			
			String team_type = SessionUtil.getString(session, "ADMIN", "team_type");
			
			if("2".equals(team_type)) {
				
				if(!paramMap.isEmpty()) {
					
					session.setAttribute("SITE_MAP", paramMap);
					
					moveUrl = "redirect:./bldHome";
					
				}
				
				
			}
		}
		
		return moveUrl;
	}
	
	//	pop - bld - home
	@RequestMapping("/bldHome")
	public String popBldHome(
			@RequestParam(value="home", defaultValue = "home") String mainMenu,
			@RequestParam HashMap paramMap,
			Model model, HttpSession session)throws Exception{
		
		String moveUrl = "redirect:/";
		
		if(!SessionUtil.isNull(session, "ADMIN")) {
			
			String team_type = SessionUtil.getString(session, "ADMIN", "team_type");
			
			if("2".equals(team_type)) {
				
				moveUrl = "org/pop/bld/main/popBldMainHome";
				
				
				model.addAttribute("mainMenu", mainMenu);
				
				
			}
		}
		
		return moveUrl;
		 
	}//
	
	//	계측기간 사용량 비교 - 시간대별 비교
	@RequestMapping("/bldUsageTime")
	public String popBldUsageTime(HttpSession session, Model model,
			@RequestParam(value="mainMenu", defaultValue = "usage") String mainMenu
			,  @RequestParam(value="subMenu", defaultValue="time") String subMenu) throws Exception{
		
		String moveUrl = "redirect:/";
		
		if(!SessionUtil.isNull(session, "ADMIN")) {
			
			String team_type = SessionUtil.getString(session, "ADMIN", "team_type");
			
			if("2".equals(team_type)) {
				moveUrl = "org/pop/bld/usage/popBldUsageTime";
				model.addAttribute("mainMenu", mainMenu);
				model.addAttribute("subMenu", subMenu);
			}
		}
		
		return moveUrl;
	}
	
	//	계측기간 사용량 비교 - 날짜별 분석
	@RequestMapping("/bldUsageDay")
	public String popBldUsageDay(HttpSession session, Model model, 
			@RequestParam(value="mainMenu", defaultValue = "usage") String mainMenu
			,@RequestParam(value="subMenu", defaultValue="day") String subMenu) throws Exception{
		
		
		String moveUrl = "redirect:/";
		
		if(!SessionUtil.isNull(session, "ADMIN")) {
			
			String team_type = SessionUtil.getString(session, "ADMIN", "team_type");

			if("2".equals(team_type)) {		
				moveUrl = "org/pop/bld/usage/popBldUsageDay";
				
				model.addAttribute("mainMenu", mainMenu);
				model.addAttribute("subMenu", subMenu);
			}
			
		}
		
		return moveUrl;
	}
	
	//	계측기간 사용량 비교 - 요일별 분석
	@RequestMapping("/bldUsageWeek")
	public String popBldUsageWeek(HttpSession session, Model model, 
			@RequestParam(value="mainMenu", defaultValue = "usage") String mainMenu
			,@RequestParam(value="subMenu", defaultValue="week") String subMenu) throws Exception{
		
		
		String moveUrl = "redirect:../";
		
		if(!SessionUtil.isNull(session, "ADMIN")) {
			
			String team_type = SessionUtil.getString(session, "ADMIN", "team_type");

			if("2".equals(team_type)) {	
				moveUrl = "org/pop/bld/usage/popBldUsageWeek";
				
				model.addAttribute("mainMenu", mainMenu);
				model.addAttribute("subMenu", subMenu);
			}
			
		}
		
		return moveUrl;
	}	
	
	//	계측기간 사용량 비교 - 월별 분석
	@RequestMapping("/bldUsageMonth")
	public String popBldUsageMonth(HttpSession session, Model model, 
			@RequestParam(value="mainMenu", defaultValue = "usage") String mainMenu
			,@RequestParam(value="subMenu", defaultValue="month") String subMenu) throws Exception{
		
		
		String moveUrl = "redirect:/";
		
		if(!SessionUtil.isNull(session, "ADMIN")) {
			
			String team_type = SessionUtil.getString(session, "ADMIN", "team_type");

			if("2".equals(team_type)) {	
				moveUrl = "org/pop/bld/usage/popBldUsageMonth";
				
				model.addAttribute("mainMenu", mainMenu);
				model.addAttribute("subMenu", subMenu);
			}
			
		}
		
		return moveUrl;
	}	
	
	
	//	계측기별 사용량 분석 - 시간대별 분석
	@RequestMapping("/bldMeterTime")
	public String popBldMeterTime(HttpSession session, Model model, 
			@RequestParam(value = "mainMenu", defaultValue = "meter" ) String mainMenu
			,@RequestParam(value = "subMenu" , defaultValue= "meter-time" ) String subMenu) throws Exception{
		
		
		String moveUrl = "redirect:/";
		
		if(!SessionUtil.isNull(session, "ADMIN")) {
			
			String team_type = SessionUtil.getString(session, "ADMIN", "team_type");

			if("2".equals(team_type)) {	
				moveUrl = "org/pop/bld/meter/popBldMeterTime";
				
				model.addAttribute("mainMenu", mainMenu);
				model.addAttribute("subMenu", subMenu);
			}
			
		}
		
		return moveUrl;
	}

	//	계측기별 사용량 분석 - 시간대별 다중 분석
	@RequestMapping("/bldMeterCompTime")
	public String meterCompTime(HttpSession session,Model model,
	  @RequestParam(value = "mainMenu", defaultValue = "meter" ) String mainMenu
	  ,@RequestParam(value = "subMenu", defaultValue = "meter-comptime" ) String subMenu) throws Exception{
	
	
		String moveUrl = "redirect:/";
	 
		if(!SessionUtil.isNull(session, "ADMIN")) {
	 
			String team_type = SessionUtil.getString(session, "ADMIN", "team_type");
	  
			if("2".equals(team_type)) { 
				moveUrl = "org/pop/bld/meter/popBldMeterCompTime";
	  
				model.addAttribute("mainMenu", mainMenu); 
				model.addAttribute("subMenu",subMenu); 
	  	
			}
	
		}
	
		return moveUrl; 
	}
	
	//	계측기별 사용량 분석 - 날짜별 분석
	@RequestMapping("/bldMeterWeek")
	public String meterWeek(HttpSession session, Model model, 
			@RequestParam(value="mainMenu", defaultValue = "meter") String mainMenu
			,@RequestParam(value="subMenu", defaultValue = "meter-week") String subMenu) throws Exception{
		
		
		String moveUrl = "redirect:/";
		
		if(!SessionUtil.isNull(session, "ADMIN")) {
			
			String team_type = SessionUtil.getString(session, "ADMIN", "team_type");

			if("2".equals(team_type)) {	
				moveUrl = "org/pop/bld/meter/popBldMeterWeek";
				
				model.addAttribute("mainMenu", mainMenu);
				model.addAttribute("subMenu", subMenu);
			}
			
		}
		
		return moveUrl;
	}	
	
	//	계측기별 사용량 분석 - 요일별 분석
	@RequestMapping("/bldMeterMonth")
	public String meterMonth(HttpSession session, Model model, 
			@RequestParam(value="mainMenu", defaultValue = "meter") String mainMenu
			,@RequestParam(value="subMenu", defaultValue = "meter-month") String subMenu) throws Exception{
		
		
		String moveUrl = "redirect:/";
		
		if(!SessionUtil.isNull(session, "ADMIN")) {
			
			String team_type = SessionUtil.getString(session, "ADMIN", "team_type");

			if("2".equals(team_type)) {	
				moveUrl = "org/pop/bld/meter/popBldMeterMonth";
				
				model.addAttribute("mainMenu", mainMenu);
				model.addAttribute("subMenu", subMenu);
			}
			
		}
		
		return moveUrl;
	}	
	 
	
}
